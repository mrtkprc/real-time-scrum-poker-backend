type Query{
    session(id: ID!): Session!
    findSessionBySessionNumber(sessionNumber: Int!): Session
}

type Session{
    id: ID!
    sessionNumber: Int!
    description: String
    participants: [Participant]
    votes: [Vote]
}

type Mutation{
    createSession(data: CreateSessionInput): Session!
    forwardTeamToDefiniteScreen(sessionId: ID!, screenName: String!, delayDuration: Int!): String
}

input CreateSessionInput{
    sessionNumber: Int!
    description: String
}

type Subscription{
    newParticipantArrived(sessionId: ID): Participant!
    voteGiven(sessionId: ID): Vote!
    forwardTeamToDefiniteScreenSubscription(sessionId: ID!): String
}
